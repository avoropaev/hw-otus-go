{
  "swagger": "2.0",
  "info": {
    "title": "EventService.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/event.EventService/CreateEvent": {
      "post": {
        "operationId": "EventService_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventCreateUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventEvent"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/DeleteEvent": {
      "post": {
        "operationId": "EventService_DeleteEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventDeleteRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/GetEventsForDay": {
      "post": {
        "operationId": "EventService_GetEventsForDay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventGetEventsRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/GetEventsForMonth": {
      "post": {
        "operationId": "EventService_GetEventsForMonth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventGetEventsRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/GetEventsForWeek": {
      "post": {
        "operationId": "EventService_GetEventsForWeek",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventGetEventsRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/UpdateEvent": {
      "post": {
        "operationId": "EventService_UpdateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventCreateUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventEvent"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    }
  },
  "definitions": {
    "eventCreateUpdateResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "eventDeleteRequest": {
      "type": "object",
      "properties": {
        "eventGuid": {
          "type": "string"
        }
      }
    },
    "eventDeleteResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "eventEvent": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "startAt": {
          "type": "string",
          "format": "date-time"
        },
        "endAt": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "userGuid": {
          "type": "string"
        },
        "notifyBefore": {
          "type": "string"
        }
      }
    },
    "eventGetEventsRequest": {
      "type": "object",
      "properties": {
        "startAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "eventGetEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventEvent"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
